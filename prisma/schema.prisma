// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories{
  category_id Int @id @default(autoincrement())
  category_name String  @unique @db.VarChar(50)
  products      products[]
  // @@map("categories")
}

model products{
  product_id Int @id @default(autoincrement())
  category_id Int
  category  categories @relation(fields: [category_id], references: [category_id],onDelete: Cascade,onUpdate: Cascade)
  product_name String @db.VarChar(100) @unique
  price Float @db.DoublePrecision
  order orders[]
}

model customers{
  customer_id Int @id @default(autoincrement())
  first_name String @db.VarChar(100)
  last_name String @db.VarChar(100)
  birth_date DateTime @db.Date
  money_spent Float @db.DoublePrecision
  order orders[]
}

model orders  {
  order_id Int @id @default(autoincrement())
  customer_id Int
  customer customers @relation(fields: [customer_id], references: [customer_id],onDelete: Cascade,onUpdate: Cascade)
  product_id Int
  product products @relation(fields: [product_id], references: [product_id],onDelete: Cascade,onUpdate: Cascade)
  order_total Float @db.DoublePrecision
  order_qty Int
  order_date DateTime

}